openapi: 3.1.0
info:
  title: Wesog API
  description: Wesog AI services for media providers
  version: 1.0.0
servers:
- url: https://api.wesog.com
  description: Production server
paths:
  /me:
    get:
      tags:
      - Roles
      summary: Get my role
      description: Get information about my role like client name, role name... (using
        the provided api key)
      operationId: read_me_me_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
      - APIKeyHeader: []
  /ops/:
    get:
      tags:
      - Operations
      summary: See all operations
      operationId: get_all_operations_ops__get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
      - APIKeyHeader: []
  /ops/{op_id}:
    get:
      tags:
      - Operations
      summary: Check operation status
      operationId: operation_status_ops__op_id__get
      security:
      - APIKeyHeader: []
      parameters:
      - name: op_id
        in: path
        required: true
        schema:
          type: integer
          title: Op Id
      responses:
        '200':
          description: Operation status successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation_Out'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - Operations
      summary: Abort current running operation
      operationId: operation_delete_ops__op_id__delete
      security:
      - APIKeyHeader: []
      parameters:
      - name: op_id
        in: path
        required: true
        schema:
          type: integer
          title: Op Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /tag/image:
    post:
      tags:
      - Wesog Tag
      summary: Tag Image
      operationId: tag_image_tag_image_post
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_tag_image_tag_image_post'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - APIKeyHeader: []
  /query_imgs:
    post:
      tags:
      - Query Images
      summary: Upload 1 query image
      description: Upload 1 image file to be used in a reverse image search. This
        endpoint returns an image hash that can be used as a reference later in the
        search query.
      operationId: upload_query_image_query_imgs_post
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_upload_query_image_query_imgs_post'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
      - APIKeyHeader: []
  /imgs/{item_id}:
    get:
      tags:
      - Images
      summary: Get 1 image
      description: Get a image by its ID.
      operationId: get_1_imgs__item_id__get
      security:
      - APIKeyHeader: []
      parameters:
      - name: item_id
        in: path
        required: true
        schema:
          type: string
          title: Item Id
      - name: fields
        in: query
        required: false
        schema:
          type: array
          items:
            enum:
            - image_id
            - src
            - url_img_watermark
            - url_img_thumbnail
            - height
            - width
            - aspect_ratio
            - n_faces
            - title
            - headline
            - caption
            - ai_generated
            - model_release
            - property_release
            - nsfw
            - date
            - orientation
            - status
            - location
            - city
            - country
            - event
            - author
            - provider
            - shot
            - scene
            - medium
            - technique
            - keywords
            - categories
            - collections
            type: string
          description: 'List of fields to retrieve. Example: fields=title&fields=description'
          default:
          - height
          - width
          - src
          - url_img_watermark
          - url_img_thumbnail
          - n_faces
          - title
          - headline
          - caption
          title: Fields
        description: 'List of fields to retrieve. Example: fields=title&fields=description'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImgOut'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - Images
      summary: Create 1 image
      description: Create a image by its ID.
      operationId: post_1_imgs__item_id__post
      security:
      - APIKeyHeader: []
      parameters:
      - name: item_id
        in: path
        required: true
        schema:
          type: string
          title: Item Id
      - name: wait
        in: query
        required: false
        schema:
          type: boolean
          description: Wait for completion?
          default: false
          title: Wait
        description: Wait for completion?
      - name: urgent
        in: query
        required: false
        schema:
          type: boolean
          description: Enqueue at head of queue if True
          default: false
          title: Urgent
        description: Enqueue at head of queue if True
      - name: strict
        in: query
        required: false
        schema:
          type: boolean
          description: Use strict mode if True
          default: false
          title: Strict
        description: Use strict mode if True
      - name: lang
        in: query
        required: false
        schema:
          type: string
          description: en|es|pt|fr|ru
          default: es
          title: Lang
        description: en|es|pt|fr|ru
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImgNew_withoutID'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '201':
          description: image successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation_Out'
        '202':
          description: image creation accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PendingOperation'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
      - Images
      summary: Replace 1 image
      description: Completely replace existing image in DB.
      operationId: put_1_imgs__item_id__put
      security:
      - APIKeyHeader: []
      parameters:
      - name: item_id
        in: path
        required: true
        schema:
          type: string
          title: Item Id
      - name: wait
        in: query
        required: false
        schema:
          type: boolean
          description: Wait for completion?
          default: false
          title: Wait
        description: Wait for completion?
      - name: urgent
        in: query
        required: false
        schema:
          type: boolean
          description: Enqueue at head of queue if True
          default: false
          title: Urgent
        description: Enqueue at head of queue if True
      - name: strict
        in: query
        required: false
        schema:
          type: boolean
          description: Use strict mode if True
          default: false
          title: Strict
        description: Use strict mode if True
      - name: lang
        in: query
        required: false
        schema:
          type: string
          description: en|es|pt|fr|ru
          default: es
          title: Lang
        description: en|es|pt|fr|ru
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImgNew_withoutID'
      responses:
        '200':
          description: image successfully replaced
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation_Out'
        '202':
          description: image replacement accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PendingOperation'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - Images
      summary: Delete 1 image
      description: Remove existing image by ID from the database.
      operationId: delete_1_imgs__item_id__delete
      security:
      - APIKeyHeader: []
      parameters:
      - name: item_id
        in: path
        required: true
        schema:
          type: string
          title: Item Id
      - name: wait
        in: query
        required: false
        schema:
          type: boolean
          description: Wait for completion?
          default: false
          title: Wait
        description: Wait for completion?
      - name: urgent
        in: query
        required: false
        schema:
          type: boolean
          description: Enqueue at head of queue if True
          default: false
          title: Urgent
        description: Enqueue at head of queue if True
      - name: strict
        in: query
        required: false
        schema:
          type: boolean
          description: Use strict mode if True
          default: false
          title: Strict
        description: Use strict mode if True
      responses:
        '200':
          description: image successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation_Out'
        '202':
          description: image deletion accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PendingOperation'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /imgs:
    get:
      tags:
      - Images
      summary: Search N images
      description: Do simple image listing or do advanced image search with filters,
        sorting, pagination, facets and counting
      operationId: get_n_imgs_get
      security:
      - APIKeyHeader: []
      parameters:
      - name: q
        in: query
        required: false
        schema:
          type: string
          description: 'Query filtering formula, must be url-encoded. Example: (id=123
            && type=A) || status:active'
          default: ''
          title: Q
        description: 'Query filtering formula, must be url-encoded. Example: (id=123
          && type=A) || status:active'
      - name: page
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          description: Page number. 1 is the first page.
          default: 1
          title: Page
        description: Page number. 1 is the first page.
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          maximum: 10000
          minimum: 1
          description: Maximum number of images to return per page
          default: 50
          title: Limit
        description: Maximum number of images to return per page
      - name: sort_by
        in: query
        required: false
        schema:
          enum:
          - ''
          - image_id
          - src
          - url_img_watermark
          - url_img_thumbnail
          - height
          - width
          - aspect_ratio
          - n_faces
          - date
          - title
          - headline
          - caption
          - location
          - city
          - country
          - event
          - author
          - provider
          - shot
          - scene
          - medium
          - technique
          - similarity
          - sim
          type: string
          description: Sorting criterion. Note that sort_by=similarity only works
            if there are present "similary filters" on the Query Filtering Formula.
          default: ''
          title: Sort By
        description: Sorting criterion. Note that sort_by=similarity only works if
          there are present "similary filters" on the Query Filtering Formula.
      - name: sort_order
        in: query
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
          description: Ascending or descending sorting.
          default: desc
          title: Sort Order
        description: Ascending or descending sorting.
      - name: fields
        in: query
        required: false
        schema:
          type: array
          items:
            enum:
            - image_id
            - src
            - url_img_watermark
            - url_img_thumbnail
            - height
            - width
            - aspect_ratio
            - n_faces
            - title
            - headline
            - caption
            - ai_generated
            - model_release
            - property_release
            - nsfw
            - date
            - orientation
            - status
            - location
            - city
            - country
            - event
            - author
            - provider
            - shot
            - scene
            - medium
            - technique
            - keywords
            - categories
            - collections
            type: string
          description: 'Array of fields to retrieve. Example: fields=image_id&fields=src'
          default:
          - height
          - width
          - src
          - url_img_watermark
          - url_img_thumbnail
          - n_faces
          - title
          - headline
          - caption
          title: Fields
        description: 'Array of fields to retrieve. Example: fields=image_id&fields=src'
      - name: facets
        in: query
        required: false
        schema:
          type: array
          items:
            enum:
            - ai_generated
            - model_release
            - property_release
            - nsfw
            - orientation
            - status
            - location
            - city
            - country
            - event
            - author
            - provider
            - shot
            - scene
            - medium
            - technique
            - keywords
            - categories
            - collections
            type: string
          description: 'Array of facets to retrieve. Example: facets=author&facets=keywords'
          default: []
          title: Facets
        description: 'Array of facets to retrieve. Example: facets=author&facets=keywords'
      - name: count
        in: query
        required: false
        schema:
          type: boolean
          description: Include total hit count?
          default: false
          title: Count
        description: Include total hit count?
      - name: lang
        in: query
        required: false
        schema:
          enum:
          - ml
          - en
          - es
          type: string
          description: Language code.
          default: ml
          title: Lang
        description: Language code.
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/image_search_response'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - Images
      summary: Create N images
      description: Create one or more new images.
      operationId: post_n_imgs_post
      security:
      - APIKeyHeader: []
      parameters:
      - name: wait
        in: query
        required: false
        schema:
          type: boolean
          description: Wait for completion?
          default: false
          title: Wait
        description: Wait for completion?
      - name: urgent
        in: query
        required: false
        schema:
          type: boolean
          description: Enqueue at head of queue if True
          default: false
          title: Urgent
        description: Enqueue at head of queue if True
      - name: strict
        in: query
        required: false
        schema:
          type: boolean
          description: Use strict mode if True
          default: false
          title: Strict
        description: Use strict mode if True
      - name: lang
        in: query
        required: false
        schema:
          type: string
          description: en|es|pt|fr|ru
          default: es
          title: Lang
        description: en|es|pt|fr|ru
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ImgNew'
              title: Items
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '201':
          description: images successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation_Out'
        '202':
          description: images creation accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PendingOperation'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
      - Images
      summary: Replace N images
      description: Completely replace existing images in DB.
      operationId: put_n_imgs_put
      security:
      - APIKeyHeader: []
      parameters:
      - name: wait
        in: query
        required: false
        schema:
          type: boolean
          description: Wait for completion?
          default: false
          title: Wait
        description: Wait for completion?
      - name: urgent
        in: query
        required: false
        schema:
          type: boolean
          description: Enqueue at head of queue if True
          default: false
          title: Urgent
        description: Enqueue at head of queue if True
      - name: strict
        in: query
        required: false
        schema:
          type: boolean
          description: Use strict mode if True
          default: false
          title: Strict
        description: Use strict mode if True
      - name: lang
        in: query
        required: false
        schema:
          type: string
          description: en|es|pt|fr|ru
          default: es
          title: Lang
        description: en|es|pt|fr|ru
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ImgNew'
              title: Items
      responses:
        '200':
          description: images successfully replaced
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation_Out'
        '202':
          description: images replacement accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PendingOperation'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
      - Images
      summary: Delete N images
      description: Remove existing images from the database.
      operationId: delete_n_imgs_delete
      security:
      - APIKeyHeader: []
      parameters:
      - name: wait
        in: query
        required: false
        schema:
          type: boolean
          description: Wait for completion?
          default: false
          title: Wait
        description: Wait for completion?
      - name: urgent
        in: query
        required: false
        schema:
          type: boolean
          description: Enqueue at head of queue if True
          default: false
          title: Urgent
        description: Enqueue at head of queue if True
      - name: strict
        in: query
        required: false
        schema:
          type: boolean
          description: Use strict mode if True
          default: false
          title: Strict
        description: Use strict mode if True
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ImgDel'
              title: Items
      responses:
        '200':
          description: images successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation_Out'
        '202':
          description: images deletion accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PendingOperation'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    Body_tag_image_tag_image_post:
      properties:
        image:
          type: string
          format: binary
          title: Image
        lang:
          type: string
          title: Lang
          default: en
        mode:
          type: string
          title: Mode
          default: editorial
        date:
          type: string
          title: Date
          default: ''
        event:
          type: string
          title: Event
          default: ''
        city:
          type: string
          title: City
          default: ''
        country:
          type: string
          title: Country
          default: ''
        caption:
          type: boolean
          title: Caption
          default: false
        keywords:
          type: boolean
          title: Keywords
          default: false
        ocr:
          type: boolean
          title: Ocr
          default: false
        colors:
          type: boolean
          title: Colors
          default: false
      type: object
      required:
      - image
      title: Body_tag_image_tag_image_post
    Body_upload_query_image_query_imgs_post:
      properties:
        image:
          type: string
          format: binary
          title: Image
          description: "Binary image (JPG / PNG \u2264 5 MB)"
      type: object
      required:
      - image
      title: Body_upload_query_image_query_imgs_post
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    ImgDel:
      properties:
        id:
          type: string
          title: Id
          description: Unique identifier of the image.
      type: object
      required:
      - id
      title: ImgDel
    ImgNew:
      properties:
        url_img_watermark:
          anyOf:
          - type: string
          - type: 'null'
          title: Url Img Watermark
          description: URL of the watermarked image.
          example: https://cdn.example.com/image/wm.jpg
        url_img_thumbnail:
          anyOf:
          - type: string
          - type: 'null'
          title: Url Img Thumbnail
          description: URL of the thumbnail image.
          example: https://cdn.example.com/image/thumb.jpg
        title:
          anyOf:
          - type: string
          - type: 'null'
          title: Title
          description: A shorthand reference for the image.
          example: image123
        headline:
          anyOf:
          - type: string
          - type: 'null'
          title: Headline
          description: Short text describing the image.
          example: Sunset over the Hudson River
        caption:
          anyOf:
          - type: string
          - type: 'null'
          title: Caption
          description: Long text describing the image.
          example: A vibrant orange sunset reflecting on the river with the city skyline
            in silhouette.
        alt_text:
          anyOf:
          - type: string
          - type: 'null'
          title: Alt Text
          description: Text describing the visual appearance of an image (Accessibility).
        ai_generated:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Ai Generated
          description: Image generated by Artificial Intelligence.
        model_release:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Model Release
          description: image with model release.
        property_release:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Property Release
          description: image with property release.
        nsfw:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Nsfw
          description: Image Not Safe For Work.
        status:
          anyOf:
          - type: string
          - type: 'null'
          title: Status
          description: Current status of the image.
          example: Active
        date:
          anyOf:
          - type: string
          - type: 'null'
          title: Date
          description: Date of the image creation in year-month-day format. Capture
            date for photographies.
          example: '2024-10-19'
        location:
          anyOf:
          - type: string
          - type: 'null'
          title: Location
          description: A detailed description of the location, complementing the specified
            country and city with additional details such as street address or notable
            landmarks.
          example: 123 Main St, near Central Park
        city:
          anyOf:
          - type: string
          - type: 'null'
          title: City
          description: Name of the country.
          example: New York
        country:
          anyOf:
          - type: string
          - type: 'null'
          title: Country
          description: Name of the country.
          example: United States
        event:
          anyOf:
          - type: string
          - type: 'null'
          title: Event
          description: Related event
          example: Oscar awards 2024
        author:
          anyOf:
          - type: string
          - type: 'null'
          title: Author
          description: The name of the individual or entity responsible for creating
            the image, such as a photographer or painter.
          example: Jane Doe
        provider:
          anyOf:
          - type: string
          - type: 'null'
          title: Provider
          description: The identifier of the provider, which can be either a unique
            numeric ID or a descriptive name.
          example: Acme Inc.
        shot:
          anyOf:
          - type: string
          - type: 'null'
          title: Shot
          description: Type of photography shot.
          example: Portrait
        scene:
          anyOf:
          - type: string
          - type: 'null'
          title: Scene
          description: Spot, place, visual location
          example: Town square
        technique:
          anyOf:
          - type: string
          - type: 'null'
          title: Technique
          description: The specific method or process used in creating the artwork,
            reflecting the artist's unique approach or the traditional methods tied
            to certain mediums.
          example: Drawing
        medium:
          anyOf:
          - type: string
          - type: 'null'
          title: Medium
          description: The material or substance used in the creation of the artwork
            or object. This field corresponds to various artistic mediums like oils,
            acrylics, or digital formats.
          example: Oil on canvas
        keywords:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Keywords
          description: Specific tags describing the image
          example:
          - Tree
          - Dog
          - Ball
          - Water
        categories:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Categories
          description: General categories of the image
          example:
          - Sport
          - Fashion
          - Politics
        collections:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Collections
          description: Collections that the image belongs to
          example:
          - Steet pics
          - Exclusive
        id:
          type: string
          title: Id
          description: Unique identifier of the image.
        src:
          type: string
          title: Src
          description: Url of the image (used as source for the AI)
      additionalProperties: false
      type: object
      required:
      - id
      - src
      title: ImgNew
      description: Modelo para crear una nueva imagen (con ID).
    ImgNew_withoutID:
      properties:
        url_img_watermark:
          anyOf:
          - type: string
          - type: 'null'
          title: Url Img Watermark
          description: URL of the watermarked image.
          example: https://cdn.example.com/image/wm.jpg
        url_img_thumbnail:
          anyOf:
          - type: string
          - type: 'null'
          title: Url Img Thumbnail
          description: URL of the thumbnail image.
          example: https://cdn.example.com/image/thumb.jpg
        title:
          anyOf:
          - type: string
          - type: 'null'
          title: Title
          description: A shorthand reference for the image.
          example: image123
        headline:
          anyOf:
          - type: string
          - type: 'null'
          title: Headline
          description: Short text describing the image.
          example: Sunset over the Hudson River
        caption:
          anyOf:
          - type: string
          - type: 'null'
          title: Caption
          description: Long text describing the image.
          example: A vibrant orange sunset reflecting on the river with the city skyline
            in silhouette.
        alt_text:
          anyOf:
          - type: string
          - type: 'null'
          title: Alt Text
          description: Text describing the visual appearance of an image (Accessibility).
        ai_generated:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Ai Generated
          description: Image generated by Artificial Intelligence.
        model_release:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Model Release
          description: image with model release.
        property_release:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Property Release
          description: image with property release.
        nsfw:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Nsfw
          description: Image Not Safe For Work.
        status:
          anyOf:
          - type: string
          - type: 'null'
          title: Status
          description: Current status of the image.
          example: Active
        date:
          anyOf:
          - type: string
          - type: 'null'
          title: Date
          description: Date of the image creation in year-month-day format. Capture
            date for photographies.
          example: '2024-10-19'
        location:
          anyOf:
          - type: string
          - type: 'null'
          title: Location
          description: A detailed description of the location, complementing the specified
            country and city with additional details such as street address or notable
            landmarks.
          example: 123 Main St, near Central Park
        city:
          anyOf:
          - type: string
          - type: 'null'
          title: City
          description: Name of the country.
          example: New York
        country:
          anyOf:
          - type: string
          - type: 'null'
          title: Country
          description: Name of the country.
          example: United States
        event:
          anyOf:
          - type: string
          - type: 'null'
          title: Event
          description: Related event
          example: Oscar awards 2024
        author:
          anyOf:
          - type: string
          - type: 'null'
          title: Author
          description: The name of the individual or entity responsible for creating
            the image, such as a photographer or painter.
          example: Jane Doe
        provider:
          anyOf:
          - type: string
          - type: 'null'
          title: Provider
          description: The identifier of the provider, which can be either a unique
            numeric ID or a descriptive name.
          example: Acme Inc.
        shot:
          anyOf:
          - type: string
          - type: 'null'
          title: Shot
          description: Type of photography shot.
          example: Portrait
        scene:
          anyOf:
          - type: string
          - type: 'null'
          title: Scene
          description: Spot, place, visual location
          example: Town square
        technique:
          anyOf:
          - type: string
          - type: 'null'
          title: Technique
          description: The specific method or process used in creating the artwork,
            reflecting the artist's unique approach or the traditional methods tied
            to certain mediums.
          example: Drawing
        medium:
          anyOf:
          - type: string
          - type: 'null'
          title: Medium
          description: The material or substance used in the creation of the artwork
            or object. This field corresponds to various artistic mediums like oils,
            acrylics, or digital formats.
          example: Oil on canvas
        keywords:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Keywords
          description: Specific tags describing the image
          example:
          - Tree
          - Dog
          - Ball
          - Water
        categories:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Categories
          description: General categories of the image
          example:
          - Sport
          - Fashion
          - Politics
        collections:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Collections
          description: Collections that the image belongs to
          example:
          - Steet pics
          - Exclusive
        src:
          type: string
          title: Src
          description: Unique identifier of the image.
      additionalProperties: false
      type: object
      required:
      - src
      title: ImgNew_withoutID
    ImgOut:
      properties:
        url_img_watermark:
          anyOf:
          - type: string
          - type: 'null'
          title: Url Img Watermark
          description: URL of the watermarked image.
          example: https://cdn.example.com/image/wm.jpg
        url_img_thumbnail:
          anyOf:
          - type: string
          - type: 'null'
          title: Url Img Thumbnail
          description: URL of the thumbnail image.
          example: https://cdn.example.com/image/thumb.jpg
        title:
          anyOf:
          - type: string
          - type: 'null'
          title: Title
          description: A shorthand reference for the image.
          example: image123
        headline:
          anyOf:
          - type: string
          - type: 'null'
          title: Headline
          description: Short text describing the image.
          example: Sunset over the Hudson River
        caption:
          anyOf:
          - type: string
          - type: 'null'
          title: Caption
          description: Long text describing the image.
          example: A vibrant orange sunset reflecting on the river with the city skyline
            in silhouette.
        alt_text:
          anyOf:
          - type: string
          - type: 'null'
          title: Alt Text
          description: Text describing the visual appearance of an image (Accessibility).
        ai_generated:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Ai Generated
          description: Image generated by Artificial Intelligence.
        model_release:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Model Release
          description: image with model release.
        property_release:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Property Release
          description: image with property release.
        nsfw:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Nsfw
          description: Image Not Safe For Work.
        status:
          anyOf:
          - type: string
          - type: 'null'
          title: Status
          description: Current status of the image.
          example: Active
        date:
          anyOf:
          - type: string
          - type: 'null'
          title: Date
          description: Date of the image creation in year-month-day format. Capture
            date for photographies.
          example: '2024-10-19'
        location:
          anyOf:
          - type: string
          - type: 'null'
          title: Location
          description: A detailed description of the location, complementing the specified
            country and city with additional details such as street address or notable
            landmarks.
          example: 123 Main St, near Central Park
        city:
          anyOf:
          - type: string
          - type: 'null'
          title: City
          description: Name of the country.
          example: New York
        country:
          anyOf:
          - type: string
          - type: 'null'
          title: Country
          description: Name of the country.
          example: United States
        event:
          anyOf:
          - type: string
          - type: 'null'
          title: Event
          description: Related event
          example: Oscar awards 2024
        author:
          anyOf:
          - type: string
          - type: 'null'
          title: Author
          description: The name of the individual or entity responsible for creating
            the image, such as a photographer or painter.
          example: Jane Doe
        provider:
          anyOf:
          - type: string
          - type: 'null'
          title: Provider
          description: The identifier of the provider, which can be either a unique
            numeric ID or a descriptive name.
          example: Acme Inc.
        shot:
          anyOf:
          - type: string
          - type: 'null'
          title: Shot
          description: Type of photography shot.
          example: Portrait
        scene:
          anyOf:
          - type: string
          - type: 'null'
          title: Scene
          description: Spot, place, visual location
          example: Town square
        technique:
          anyOf:
          - type: string
          - type: 'null'
          title: Technique
          description: The specific method or process used in creating the artwork,
            reflecting the artist's unique approach or the traditional methods tied
            to certain mediums.
          example: Drawing
        medium:
          anyOf:
          - type: string
          - type: 'null'
          title: Medium
          description: The material or substance used in the creation of the artwork
            or object. This field corresponds to various artistic mediums like oils,
            acrylics, or digital formats.
          example: Oil on canvas
        keywords:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Keywords
          description: Specific tags describing the image
          example:
          - Tree
          - Dog
          - Ball
          - Water
        categories:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Categories
          description: General categories of the image
          example:
          - Sport
          - Fashion
          - Politics
        collections:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Collections
          description: Collections that the image belongs to
          example:
          - Steet pics
          - Exclusive
        id:
          anyOf:
          - type: string
          - type: 'null'
          title: Id
          description: Unique identifier of the image.
        src:
          anyOf:
          - type: string
          - type: 'null'
          title: Src
          description: Url of the image (used as source for the AI)
        height:
          anyOf:
          - type: integer
          - type: 'null'
          title: Height
          description: Height of the image.
        width:
          anyOf:
          - type: integer
          - type: 'null'
          title: Width
          description: Width of the image.
        n_faces:
          anyOf:
          - type: integer
          - type: 'null'
          title: N Faces
          description: Num of people faces that appears on the image.
      additionalProperties: false
      type: object
      title: ImgOut
    OpError:
      properties:
        id:
          type: integer
          title: Id
          description: Identifier of the resource that triggered the error.
        msg:
          type: string
          title: Msg
          description: Human-readable description of the error returned by the system.
      type: object
      required:
      - id
      - msg
      title: OpError
      description: Details of an error produced during the operation.
    OpMethod:
      type: string
      enum:
      - add
      - upd
      - del
      - multiple
      title: OpMethod
      description: "Tipo de respuesta asociada a una operaci\xF3n con im\xE1genes."
    OpResource:
      type: string
      enum:
      - video
      - image
      - celebs
      title: OpResource
    Operation_Out:
      properties:
        method:
          $ref: '#/components/schemas/OpMethod'
          description: Operation type based on the HTTP method.
        resource:
          $ref: '#/components/schemas/OpResource'
          description: Resource type involved in the operation.
        num_total:
          type: integer
          title: Num Total
          description: Total of elements.
        num_good:
          type: integer
          title: Num Good
          description: Number of correctly processed elements.
        num_bad:
          type: integer
          title: Num Bad
          description: Number of failed processed elements.
        is_started:
          type: boolean
          title: Is Started
          description: Boolean indicating if the operation has started.
        is_finished:
          type: boolean
          title: Is Finished
          description: Boolean indicating if the operations has finished.
        all_good:
          anyOf:
          - type: boolean
          - type: 'null'
          title: All Good
          description: Boolean indicating that there is no failed elements yet.
        do_wait:
          type: boolean
          title: Do Wait
          description: Boolean for know if have to wait or not.
        do_urgent:
          type: boolean
          title: Do Urgent
          description: Boolean for know if it is an urgent operation.
        do_strict:
          type: boolean
          title: Do Strict
          description: Boolean for know if is required strict operations over DB.
        idle_ms:
          type: number
          title: Idle Ms
          description: Duration (milliseconds) between the operation has been created
            and has started.
        exec_ms:
          type: number
          title: Exec Ms
          description: Duration (milliseconds) between the operation has been started
            and has finished.
        created_at:
          type: string
          title: Created At
          description: Creation datetime.
        started_at:
          type: string
          title: Started At
          description: Start datetime.
        finished_at:
          type: string
          title: Finished At
          description: Finalization datetime.
        errors:
          items:
            $ref: '#/components/schemas/OpError'
          type: array
          title: Errors
          description: List of errors that occurred during processing the operation.
      type: object
      required:
      - method
      - resource
      - num_total
      - num_good
      - num_bad
      - is_started
      - is_finished
      - all_good
      - do_wait
      - do_urgent
      - do_strict
      - idle_ms
      - exec_ms
      - created_at
      - started_at
      - finished_at
      - errors
      title: Operation_Out
      description: 'Output of:

        - a synchronous (blocking) operation. POST /imgs?wait=true

        - operation status.                   GET ops/<op_id>'
    PendingOperation:
      properties:
        operation_id:
          type: integer
          title: Operation Id
          description: ID assigned to the operation, or -1 if enqueuing failed
        n_total:
          type: integer
          title: N Total
          description: Total number of items attempted to enqueue
        msg:
          type: string
          title: Msg
          description: Status message (e.g., 'Operation enqueued successfully')
      type: object
      required:
      - operation_id
      - n_total
      - msg
      title: PendingOperation
      description: 'Immediate output of an asynchronous (queued) operation.


        Processing takes place in the background; `operation_id = -1`

        indicates that the job could not be enqueued.'
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
    image_search_response:
      properties:
        results:
          items:
            $ref: '#/components/schemas/ImgOut'
          type: array
          title: Results
        count:
          type: integer
          title: Count
        facets:
          additionalProperties:
            items:
              additionalProperties:
                type: integer
              type: object
            type: array
          type: object
          title: Facets
      type: object
      required:
      - results
      - count
      - facets
      title: image_search_response
  securitySchemes:
    APIKeyHeader:
      type: apiKey
      in: header
      name: API-Key
