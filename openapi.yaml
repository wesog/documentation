openapi: 3.0.1
x-stoplight:
  id: ck788hn4kpol9
info:
  version: 1.0.0
  title: Wesog Search API
  description: |
    Welcome to the Wesog Search API documentation!
    Unleash the full potential of your digital assets with Wesog Search,
    a tool designed to revolutionize your search capabilities in ways you've never seen before.

    # Getting Started

    The Wesog Search API is organized into two main sections:

    - **[Manage Your Images](/doc/#tag/manage-your-images)**: This section includes all endpoints
      for uploading, modifying, and deleting your images within Wesog Search.
      Enhance your visuals with our advanced AI semantics and Celebrity Recognition technology.
    - **[Search Your Images](/doc/#tag/search-your-images)**: Here, you'll find all the endpoints
      needed to create a custom search engine. Integrate it seamlessly into your applications
      to elevate user experience and functionality.

    Dive into our documentation to discover how Wesog Search can transform your image management and retrieval processes.
  contact:
    email: javi@wesog.com
    name: Javier Abell√°n
    url: 'https://wesog.com/'
  termsOfService: ''
  license:
    name: Legal
    url: 'https://wesog.com/es/aviso-legal/'
servers:
  - url: 'https://search.wesog.com/api/v1'
    description: Wesog Search Server
paths:
  /imgs:
    post:
      tags:
        - Manage your images
      summary: Upload new images
      description: Endpoint for insert new images inside Wesog Search.
      operationId: uploadNewImages
      parameters:
        - name: mode
          in: query
          description: |-
            Upload new images in synchronous or asynchronously mode.
            - `sync` mode: The system will wait until the image upload is completed before sending a response.
            - `async` mode: The system will immediately return a response with an operation id and continue the image upload in the background. The operation id can be used later for tracking the upload process.
          required: false
          schema:
            type: string
            enum:
              - sync
              - async
            default: sync
      requestBody:
        description: 'List of image objects. For each image object, the `id` and `src` fields are required, while the other fields are optional.'
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                x-stoplight:
                  id: 7wscn24xd1tki
                type: object
                required:
                  - id
                  - src
                properties:
                  id:
                    x-stoplight:
                      id: eqng65gmppvfo
                    anyOf:
                      - type: string
                        x-stoplight:
                          id: rgrodabani96u
                      - type: number
                        x-stoplight:
                          id: yeji2d7mophps
                    description: Unique identifier of the image
                  src:
                    type: string
                    x-stoplight:
                      id: 8z8co5osw7t6b
                    description: Url of the image
                  headline:
                    type: string
                    x-stoplight:
                      id: s9e05gvjiq2a5
                    description: Short text describing the image
                  caption:
                    type: string
                    x-stoplight:
                      id: grw78ypgaxo0l
                    description: Long text describing the image
                  keywords:
                    x-stoplight:
                      id: 4q6ezectx2e7n
                    anyOf:
                      - type: string
                        x-stoplight:
                          id: ld2vxrhxkv589
                        description: string of keywords separated with ;
                      - type: array
                        x-stoplight:
                          id: ko8q3cu8aov7w
                        items:
                          x-stoplight:
                            id: 0rhzbxcbkz62y
                          type: string
                    description: Tags describing the image
                  date:
                    type: string
                    x-stoplight:
                      id: g3d9o8agwuooi
                    format: date
                    example: '2024-10-19'
                    description: date in year-month-day format
                  location:
                    type: string
                    x-stoplight:
                      id: a0sayn87ot920
                  medium:
                    type: string
                    x-stoplight:
                      id: juhiusx7d4kl7
                  author:
                    type: string
                    x-stoplight:
                      id: hjr2qakke6cka
      responses:
        '201':
          description: Created - Resource successfully created
          content:
            application/json:
              schema:
                type: object
                title: UploadNewImagesCreated
                properties:
                  data:
                    type: object
                  status:
                    type: string
                    enum:
                      - success
                    default: success
                required:
                  - data
                  - status
        '202':
          description: Accepted - Request accepted for processing
          content:
            application/json:
              schema:
                type: object
                title: UploadNewImagesAccepted
                properties:
                  message:
                    type: string
                    enum:
                      - Accepted
                    default: Accepted
                  status:
                    type: string
                    enum:
                      - success
                    default: success
                required:
                  - message
                  - status
        '400':
          description: Bad Request - Invalid request body
          content:
            application/json:
              schema:
                type: object
                title: UploadNewImagesBadRequest
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                        message:
                          type: string
                      required:
                        - field
                        - message
                  message:
                    type: string
                  status:
                    type: string
                    enum:
                      - error
                    default: error
                required:
                  - message
                  - status
        '401':
          description: Unauthorized - Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESP_401'
        '403':
          description: Forbidden - Authenticated but not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESP_403'
        '409':
          description: Conflict - Resource already exists
          content:
            application/json:
              schema:
                type: object
                title: UploadNewImagesConflict
                properties:
                  message:
                    type: string
                    enum:
                      - Conflict
                    default: Conflict
                  status:
                    type: string
                    enum:
                      - error
                    default: error
                required:
                  - message
                  - status
        '422':
          description: Unprocessable Entity - Validation errors
          content:
            application/json:
              schema:
                type: object
                title: UploadNewImagesUnprocessableEntity
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                        message:
                          type: string
                      required:
                        - field
                        - message
                  message:
                    type: string
                  status:
                    type: string
                    enum:
                      - error
                    default: error
                required:
                  - errors
                  - message
                  - status
        '500':
          description: Internal Server Error - Unexpected server error
          content:
            application/json:
              schema:
                type: object
                title: UploadNewImagesInternalServerError
                properties:
                  message:
                    type: string
                    enum:
                      - Internal Server Error
                    default: Internal Server Error
                  status:
                    type: string
                    enum:
                      - error
                    default: error
                required:
                  - message
                  - status
      security:
        - API-WESOG-SEARCH: []
      x-stoplight:
        id: vcpt9cihzgabk
    put:
      tags:
        - Manage your images
      summary: Update existing images
      operationId: updateExistingImages
      parameters:
        - name: mode
          in: query
          required: false
          schema:
            type: string
            default: sync
            enum:
              - sync
              - async
          description: 'Update existing images in synchronous or asynchronously mode.- `sync` mode: The system will wait until the image upload is completed before sending a response.- `async` mode: The system will immediately return a response with an operation id and continue the image upload in the background. The operation id can be used later for tracking the upload process.'
      responses:
        '200':
          description: OK - Resource successfully updated
          content:
            application/json:
              schema:
                type: object
                title: UpdateExistingImagesOk
                properties:
                  data:
                    type: object
                  status:
                    type: string
                    enum:
                      - success
                    default: success
                required:
                  - data
                  - status
        '204':
          description: No Content - Successful update with no response body
        '400':
          description: Bad Request - Invalid request body
          content:
            application/json:
              schema:
                type: object
                title: UpdateExistingImagesBadRequest
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                        message:
                          type: string
                      required:
                        - field
                        - message
                  message:
                    type: string
                  status:
                    type: string
                    enum:
                      - error
                    default: error
                required:
                  - message
                  - status
        '401':
          description: Unauthorized - Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESP_401'
        '403':
          description: Forbidden - Authenticated but not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESP_403'
        '404':
          description: Not Found - Resource doesn't exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESP_404'
        '409':
          description: Conflict - Version conflict
          content:
            application/json:
              schema:
                type: object
                title: UpdateExistingImagesConflict
                properties:
                  message:
                    type: string
                    enum:
                      - Conflict
                    default: Conflict
                  status:
                    type: string
                    enum:
                      - error
                    default: error
                required:
                  - message
                  - status
        '422':
          description: Unprocessable Entity - Validation errors
          content:
            application/json:
              schema:
                type: object
                title: UpdateExistingImagesUnprocessableEntity
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                        message:
                          type: string
                      required:
                        - field
                        - message
                  message:
                    type: string
                  status:
                    type: string
                    enum:
                      - error
                    default: error
                required:
                  - errors
                  - message
                  - status
        '500':
          description: Internal Server Error - Unexpected server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESP_500'
      security:
        - API-WESOG-SEARCH: []
      x-stoplight:
        id: jchkqr6jdjlji
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                x-stoplight:
                  id: m83bvhx3y5zbs
                type: object
                required:
                  - id
                properties:
                  id:
                    x-stoplight:
                      id: z8u8os0s9tbve
                    description: Unique identifier of the image
                    anyOf:
                      - type: string
                        x-stoplight:
                          id: kknfofrabr570
                      - type: number
                        x-stoplight:
                          id: s3k4pcri71apo
                  src:
                    type: string
                    x-stoplight:
                      id: 62yjftnahrj3l
                    description: Url of the image
                  headline:
                    type: string
                    x-stoplight:
                      id: i8n8kshfvdrdx
                    description: Short text describing the image
                  caption:
                    type: string
                    x-stoplight:
                      id: 2ms3gkspj07qc
                    description: Long text describing the image
                  keywords:
                    x-stoplight:
                      id: qp4tu7reui1fq
                    anyOf:
                      - type: string
                        x-stoplight:
                          id: svvs75sg8l24d
                        description: string of keywords separated with ;
                      - type: array
                        x-stoplight:
                          id: jm5gj1en6zfpo
                        items:
                          x-stoplight:
                            id: 6co27ift829nk
                          type: string
                    description: Tags describing the image
                  date:
                    type: string
                    x-stoplight:
                      id: psohqvekhk1fi
                    format: date
                    example: '2024-10-19'
                    description: date in year-month-day format
                  location:
                    type: string
                    x-stoplight:
                      id: 1s5tboinc7xmh
                  medium:
                    type: string
                    x-stoplight:
                      id: yq1lr6fqelonn
                  author:
                    type: string
                    x-stoplight:
                      id: wbmnaxbw81uzz
        description: 'List of image objects. For each image object, the `id` field is required, while the other fields are optional.'
      description: Endpoint for modify existing images already uploaded before.
    delete:
      tags:
        - Manage your images
      summary: Delete existing images
      operationId: deleteExistingImages
      responses:
        '204':
          description: No Content - Resource successfully deleted
        '400':
          description: Bad Request - Invalid request
          content:
            application/json:
              schema:
                type: object
                title: DeleteExistingImagesBadRequest
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                        message:
                          type: string
                      required:
                        - field
                        - message
                  message:
                    type: string
                  status:
                    type: string
                    enum:
                      - error
                    default: error
                required:
                  - message
                  - status
        '401':
          description: Unauthorized - Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESP_401'
        '403':
          description: Forbidden - Authenticated but not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESP_403'
        '404':
          description: Not Found - Resource doesn't exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESP_404'
        '500':
          description: Internal Server Error - Unexpected server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESP_500'
      security:
        - API-WESOG-SEARCH: []
      x-stoplight:
        id: vxjlrffdxjcxe
      description: Endpoint for erase existing images already uploaded before.
      parameters:
        - schema:
            type: string
            default: sync
            enum:
              - sync
              - async
          in: query
          name: mode
          description: 'Delete existing images in synchronous or asynchronously mode.- `sync` mode: The system will wait until the image upload is completed before sending a response.- `async` mode: The system will immediately return a response with an operation id and continue the image upload in the background. The operation id can be used later for tracking the upload process.'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              type: array
              items:
                x-stoplight:
                  id: lc2bgxzwio0w7
                type: object
                required:
                  - id
                properties:
                  id:
                    x-stoplight:
                      id: dpt8a0guq1rwn
                    description: Unique identifier of the image
                    anyOf:
                      - type: string
                        x-stoplight:
                          id: 3np15xrbublxo
                      - type: number
                        x-stoplight:
                          id: jfxoi7a28v336
  '/ops/{op_id}':
    get:
      tags:
        - Manage your images
      summary: Get status of an async operation
      operationId: getStatusOfAnAsyncOperation
      parameters:
        - name: op_id
          description: Operation ID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK - Successful request with response body
          content:
            application/json:
              schema:
                type: object
                title: GetStatusOfAnAsyncOperationOk
                properties:
                  data:
                    type: object
                  status:
                    type: string
                    enum:
                      - success
                    default: success
                required:
                  - data
                  - status
        '204':
          description: No Content - Successful request with no response body
        '400':
          description: Bad Request - Invalid query parameters
          content:
            application/json:
              schema:
                type: object
                title: GetStatusOfAnAsyncOperationBadRequest
                properties:
                  errors:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                        message:
                          type: string
                      required:
                        - field
                        - message
                  message:
                    type: string
                  status:
                    type: string
                    enum:
                      - error
                    default: error
                required:
                  - message
                  - status
        '401':
          description: Unauthorized - Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESP_401'
        '403':
          description: Forbidden - Authenticated but not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESP_403'
        '404':
          description: Not Found - Resource doesn't exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESP_404'
        '500':
          description: Internal Server Error - Unexpected server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESP_500'
      security:
        - API-WESOG-SEARCH: []
      x-stoplight:
        id: 1xynth5u3n1zi
      description: Get status of an asyncronous operations.
    parameters: []
  /search:
    get:
      summary: Search for images
      tags:
        - Search your images
      responses:
        '200':
          description: OK - Successful search with content
          content:
            application/json:
              schema:
                type: object
                title: SearchForImagesOk
                properties:
                  images:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        headline:
                          type: string
        '204':
          description: OK - Successful search without content
        '400':
          description: Bad Request - Invalid query parameters
        '401':
          description: Unauthorized - Authentication required
        '403':
          description: Forbidden - Authenticated but not authorized
      operationId: search
      x-stoplight:
        id: akn9bftz8xhxo
      description: 'Search for images with filters, sorting and pagination.'
      parameters:
        - schema:
            type: string
          in: query
          name: q
          description: Query filtering formula
          required: true
        - schema:
            type: string
          in: query
          name: sort
          description: Order of the search results by specific criteria.
        - schema:
            type: integer
          in: query
          name: page
          description: Page number of the search results.
        - schema:
            type: integer
          in: query
          name: size
          description: Number of search results per page.
  /query_img:
    post:
      tags:
        - Search your images
      summary: Upload images for your query.
      description: |
        After uploading the image file into the HTTP body on request,
        the response return both:
        - `image_hash` an identifier for reference that image later in the `GET /imgs` to perform a reverse image search.
        - `faces`: The faces coordinates detected on that photo.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  description: Image file to upload
                  format: binary
      responses:
        '200':
          description: File uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  img_hash:
                    type: string
                    example: '10405030202'
                  faces:
                    type: array
                    x-stoplight:
                      id: tdgmipfwcmprh
                    items:
                      x-stoplight:
                        id: mtwgwimzy7c52
                      type: array
                      items:
                        x-stoplight:
                          id: cu6k692m9tbn0
                        type: number
        '400':
          description: Error in file upload
      security:
        - API-WESOG-SEARCH: []
      x-stoplight:
        id: ebmbnuu87duxv
      operationId: uploadQuryImg
    parameters: []
tags:
  - name: Manage your images
    description: |
      To start using Wesog Search, upload your images. You can also update or delete them.
      - **Upload** new images: `POST /imgs`
      - **Update** existing images: `PUT /imgs`
      - **Delete** images: `DELETE /imgs`

      All operations can be performed synchronously or asynchronously.
      In asynchronous mode, you receive an operation ID immediately, and the process runs in the background.
      - **Track async** operation status: `GET /ops/{op_id}`
  - name: Search your images
    description: |
      After uploading images, you can start performing search queries. Wesog Search offers a single endpoint for all types of queries:
      - **Search** for images with filters, sorting, and pagination: `GET /imgs`

      To perform a reverse image search (using an external image as a query), upload the image first with the following endpoint:
      - **Upload query files** (e.g., images): `POST /query_files`
components:
  securitySchemes:
    API-WESOG-SEARCH:
      type: apiKey
      name: api-key
      in: header
  schemas:
    RESP_401:
      type: object
      properties:
        message:
          type: string
          enum:
            - Unauthorized
          default: Unauthorized
        status:
          type: string
          enum:
            - error
          default: error
      required:
        - message
        - status
      x-stoplight:
        id: vqcv78k86dkc5
    RESP_403:
      type: object
      title: SearchForImagesForbidden
      properties:
        message:
          type: string
          enum:
            - Forbidden
          default: Forbidden
        status:
          type: string
          enum:
            - error
          default: error
      required:
        - message
        - status
      x-stoplight:
        id: 4eev6u9gpxn26
    RESP_404:
      type: object
      properties:
        message:
          type: string
          enum:
            - Not Found
          default: Not Found
        status:
          type: string
          enum:
            - error
          default: error
      required:
        - message
        - status
      x-stoplight:
        id: htcbcnvqn5xuz
    RESP_500:
      type: object
      properties:
        message:
          type: string
          enum:
            - Internal Server Error
          default: Internal Server Error
        status:
          type: string
          enum:
            - error
          default: error
      required:
        - message
        - status
      x-stoplight:
        id: 5f7rdgnwa0jnh
security:
  - API-WESOG-SEARCH: []
